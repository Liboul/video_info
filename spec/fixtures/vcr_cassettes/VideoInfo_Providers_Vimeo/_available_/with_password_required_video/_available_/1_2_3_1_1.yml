---
http_interactions:
- request:
    method: head
    uri: https://vimeo.com/74636562
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/2.8.0
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '151209'
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Expires:
      - Tue, 27 Oct 2020 06:22:03 GMT
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-v4874-xrxx9
      Via:
      - 1.1 varnish
      - 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '0'
      X-Vserver:
      - infra-webproxy-a-15
      X-Vimeo-Dc:
      - ge
      Accept-Ranges:
      - bytes
      Date:
      - Tue, 27 Oct 2020 18:22:03 GMT
      Age:
      - '0'
      X-Served-By:
      - cache-bwi5133-BWI, cache-cwb20525-CWB
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1603822923.385452,VS0,VE302
      Vary:
      - User-Agent,Accept-Encoding
    body:
      encoding: UTF-8
      string: ''
    http_version:
  recorded_at: Tue, 27 Oct 2020 18:22:03 GMT
- request:
    method: get
    uri: https://vimeo.com/74636562
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '35083'
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Expires:
      - Tue, 27 Oct 2020 06:22:04 GMT
      X-Ua-Compatible:
      - IE=edge
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - sameorigin
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Content-Security-Policy-Report-Only:
      - 'default-src https: data: blob: wss: ''unsafe-inline'' ''unsafe-eval''; report-uri
        /_csp'
      X-Bapp-Server:
      - pweb-v4874-qqxbn
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '0'
      X-Vserver:
      - infra-webproxy-a-15
      X-Vimeo-Dc:
      - ge
      Accept-Ranges:
      - bytes
      Date:
      - Tue, 27 Oct 2020 18:22:04 GMT
      Age:
      - '0'
      X-Served-By:
      - cache-bwi5124-BWI, cache-cwb20520-CWB
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1603822924.960004,VS0,VE371
      Vary:
      - User-Agent,Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 27 Oct 2020 18:22:04 GMT
recorded_with: VCR 3.0.3
