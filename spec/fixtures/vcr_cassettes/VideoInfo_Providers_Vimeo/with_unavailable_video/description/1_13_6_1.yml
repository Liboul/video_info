---
http_interactions:
- request:
    method: head
    uri: https://vimeo.com/0812455
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - VideoInfo/3.0.0
      Accept:
      - "*/*"
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '164710'
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Expires:
      - Sun, 13 Dec 2020 01:08:49 GMT
      X-Frame-Options:
      - sameorigin
      X-Bapp-Server:
      - pweb-v6468-8f4c2
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '0'
      X-Vserver:
      - infra-webproxy-a-3
      X-Vimeo-Dc:
      - ge
      Accept-Ranges:
      - bytes
      Date:
      - Sun, 13 Dec 2020 13:08:49 GMT
      Age:
      - '0'
      X-Served-By:
      - cache-bwi5127-BWI, cache-gru17138-GRU
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1607864930.654799,VS0,VE281
      Vary:
      - Accept-Encoding
    body:
      encoding: UTF-8
      string: ''
    http_version:
  recorded_at: Sun, 13 Dec 2020 13:08:49 GMT
- request:
    method: get
    uri: https://vimeo.com/0812455
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Connection:
      - keep-alive
      Content-Length:
      - '36413'
      Server:
      - nginx
      Content-Type:
      - text/html; charset=UTF-8
      Expires:
      - Sun, 13 Dec 2020 01:08:50 GMT
      X-Frame-Options:
      - sameorigin
      X-Bapp-Server:
      - pweb-v6468-z74nf
      Via:
      - 1.1 varnish, 1.1 varnish, 1.1 varnish
      Cache-Control:
      - no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      X-Varnish-Cache:
      - '0'
      X-Vserver:
      - infra-webproxy-a-7
      X-Vimeo-Dc:
      - ge
      Accept-Ranges:
      - bytes
      Date:
      - Sun, 13 Dec 2020 13:08:50 GMT
      Age:
      - '0'
      X-Served-By:
      - cache-bwi5126-BWI, cache-gru17135-GRU
      X-Cache:
      - MISS, MISS
      X-Cache-Hits:
      - 0, 0
      X-Timer:
      - S1607864930.270072,VS0,VE272
      Vary:
      - Accept-Encoding
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Sun, 13 Dec 2020 13:08:50 GMT
recorded_with: VCR 3.0.3
