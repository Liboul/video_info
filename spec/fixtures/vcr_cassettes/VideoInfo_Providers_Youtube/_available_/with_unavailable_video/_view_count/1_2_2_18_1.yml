---
http_interactions:
- request:
    method: get
    uri: https://www.youtube.com/watch?v=SUkXvWn1m7Q
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache
      Strict-Transport-Security:
      - max-age=31536000
      P3p:
      - CP="This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=pt-BR
        for more info."
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - Tue, 27 Apr 1971 19:44:06 GMT
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Sun, 06 Sep 2020 01:05:16 GMT
      Server:
      - YouTube Frontend Proxy
      X-Xss-Protection:
      - '0'
      Set-Cookie:
      - GPS=1; path=/; domain=.youtube.com; expires=Sun, 06-Sep-2020 01:35:16 GMT
      - VISITOR_INFO1_LIVE=BW724Kd7YfM; path=/; domain=.youtube.com; secure; expires=Fri,
        05-Mar-2021 01:05:16 GMT; httponly; samesite=None
      - YSC=37NMEHqL2Ek; path=/; domain=.youtube.com; secure; httponly; samesite=None
      Alt-Svc:
      - h3-29=":443"; ma=2592000,h3-27=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-T050=":443";
        ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Sun, 06 Sep 2020 01:05:16 GMT
recorded_with: VCR 3.0.3
