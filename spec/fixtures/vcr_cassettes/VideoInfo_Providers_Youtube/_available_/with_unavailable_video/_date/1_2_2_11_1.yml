---
http_interactions:
- request:
    method: get
    uri: https://www.youtube.com/watch?v=SUkXvWn1m7Q
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - text/html; charset=utf-8
      Expires:
      - Tue, 27 Apr 1971 19:44:06 GMT
      Cache-Control:
      - no-cache
      X-Content-Type-Options:
      - nosniff
      P3p:
      - CP="This is not a P3P policy! See http://support.google.com/accounts/answer/151657?hl=pt-BR
        for more info."
      Strict-Transport-Security:
      - max-age=31536000
      X-Frame-Options:
      - SAMEORIGIN
      Date:
      - Tue, 27 Oct 2020 18:33:35 GMT
      Server:
      - YouTube Frontend Proxy
      X-Xss-Protection:
      - '0'
      Set-Cookie:
      - GPS=1; path=/; domain=.youtube.com; expires=Tue, 27-Oct-2020 19:03:35 GMT
      - VISITOR_INFO1_LIVE=blwzfYgCXp4; path=/; domain=.youtube.com; secure; expires=Sun,
        25-Apr-2021 18:33:35 GMT; httponly; samesite=None
      - YSC=sIfLtZOs6gs; path=/; domain=.youtube.com; secure; httponly; samesite=None
      Alt-Svc:
      - h3-Q050=":443"; ma=2592000,h3-29=":443"; ma=2592000,h3-T051=":443"; ma=2592000,h3-T050=":443";
        ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443"; ma=2592000,quic=":443";
        ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version:
  recorded_at: Tue, 27 Oct 2020 18:33:35 GMT
recorded_with: VCR 3.0.3
